for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
print(data[indexes,][column])
}
}
find_target(iris, 'Sepal.Length', df_for_search)
find_target <- function(
data, column, df_for_search
) {
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
print(mean(data[indexes,][column]))
}
}
find_target(iris, 'Sepal.Length', df_for_search)
find_target <- function(
data, column, df_for_search
) {
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
col_data <- data[indexes,][column]
print(col_data)
}
}
find_target(iris, 'Sepal.Length', df_for_search)
find_target <- function(
data, column, df_for_search
) {
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
col_data <- data[indexes,][column]
# get mean of col_data
mean_col_data <- mean(col_data, na.rm = TRUE)
print(mean_col_data)
}
}
find_target(iris, 'Sepal.Length', df_for_search)
find_target <- function(
data, column, df_for_search
) {
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
col_data <- data[indexes,][[column]]
print(col_data)
}
}
find_target(iris, 'Sepal.Length', df_for_search)
find_target <- function(
data, column, df_for_search
) {
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
col_data <- data[indexes,][[column]]
print(mean(col_data))
}
}
find_target(iris, 'Sepal.Length', df_for_search)
find_target <- function(
data, column, df_for_search
) {
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
col_data <- mean(data[indexes,][[column]])
print(mean(col_data))
}
df_for_search$target <- col_data
}
find_target(iris, 'Sepal.Length', df_for_search)
new_df <- find_target(iris, 'Sepal.Length', df_for_search)
v
new_df
find_target <- function(
data, column, df_for_search
) {
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
col_data <- mean(data[indexes,][[column]])
}
df_for_search$'target' <- col_data
return(df_for_search)
}
new_df <- find_target(iris, 'Sepal.Length', df_for_search)
View(new_df)
find_target <- function(
data, column, df_for_search
) {
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
col_data <- mean(data[indexes,][[column]])
df_for_search$'target' <- col_data
}
# df_for_search$'target' <- col_data
return(df_for_search)
}
new_df <- find_target(iris, 'Sepal.Length', df_for_search)
View(new_df)
find_target <- function(
data, column, df_for_search
) {
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
col_data <- mean(data[indexes,][[column]])
df_for_search$'target'[i,] <- col_data
}
# df_for_search$'target' <- col_data
return(df_for_search)
}
new_df <- find_target(iris, 'Sepal.Length', df_for_search)
find_target <- function(
data, column, df_for_search
) {
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
col_data <- mean(data[indexes,][[column]])
df_for_search[i,]$'target' <- col_data
}
# df_for_search$'target' <- col_data
return(df_for_search)
}
new_df <- find_target(iris, 'Sepal.Length', df_for_search)
View(new_df)
View(new_df)
find_target <- function(
data, column, df_for_search
) {
target_lst <- list()
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
col_data <- mean(data[indexes,][[column]])
target_lst <- append(target_lst, col_data)
}
df_for_search$'target' <- target_lst
return(df_for_search)
}
new_df <- find_target(iris, 'Sepal.Length', df_for_search)
View(new_df)
View(iris)
iris$Species%>%unique()
find_target <- function(
data, column, df_for_search, type="mean"
) {
target_lst <- list()
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
col_data <- mean(data[indexes,][[column]])
target_lst <- append(target_lst, col_data)
}
df_for_search$'target' <- target_lst
return(df_for_search)
}
new_df <- find_target(iris, 'Sepal.Length', df_for_search)
new_df
find_target <- function(
data, column, df_for_search, type="mean"
) {
target_lst <- list()
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
if (type == "mean") {
col_data <- mean(data[indexes,][[column]])
}
else if (type == "most_common") {
vals <- data[indexes, ][[column]]
col_data <- names(which.max(table(vals)))
}
target_lst <- append(target_lst, col_data)
}
df_for_search$'target' <- target_lst
return(df_for_search)
}
new_df <- find_target(iris, 'Sepal.Length', df_for_search)
find_target <- function(
data, column, df_for_search, type="mean"
) {
target_lst <- list()
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
if (type == "mean") {
col_data <- mean(data[indexes,][[column]])
}
else if (type == "most_common") {
vals <- data[indexes, ][[column]]
col_data <- names(which.max(table(vals)))
}
else {
stop("type must be 'mean' or 'most_common'")
}
target_lst <- append(target_lst, col_data)
}
df_for_search$'target' <- target_lst
return(df_for_search)
}
new_df <- find_target(iris, 'Species', df_for_search, type='most_common')
iris$Species
type(iris$Species)
typeof(iris$Species)
iris$Species
# iris$Species type
is.character(iris$Species)
# iris$Species type
is.integer(iris$Species)
# iris$Species type
is.factor(iris$Species)
is_integer(iris$Petal.Length)
is.integer(iris$Petal.Length)
is.numeric(iris$Petal.Length)
find_target <- function(
data, column, df_for_search, type="mean"
) {
target_lst <- list()
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
if (type == "mean") {
if (!is.numeric(data[column] | is.integer(data[column]))) {
stop("Column must be numeric or integer for 'mean' type")
}
col_data <- mean(data[indexes,][[column]])
}
else if (type == "most_common") {
if (!is.factor(data[[column]]) | !is.character(data[[column]])) {
stop("Column must be factor or character for 'most_common' type")
}
vals <- data[indexes, ][[column]]
col_data <- names(which.max(table(vals)))
}
else {
stop("type must be 'mean' or 'most_common'")
}
target_lst <- append(target_lst, col_data)
}
df_for_search$'target' <- target_lst
return(df_for_search)
}
new_df <- find_target(iris, 'Species', df_for_search, type='most_common')
find_target <- function(
data, column, df_for_search, type="mean"
) {
target_lst <- list()
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
if (type == "mean") {
if (!is.numeric(data[column] | is.integer(data[column]))) {
stop("Column must be numeric or integer for 'mean' type")
}
col_data <- mean(data[indexes,][[column]])
}
else if (type == "most_common") {
if (!is.factor(data[[column]]) & !is.character(data[[column]])) {
stop("Column must be factor or character for 'most_common' type")
}
vals <- data[indexes, ][[column]]
col_data <- names(which.max(table(vals)))
}
else {
stop("type must be 'mean' or 'most_common'")
}
target_lst <- append(target_lst, col_data)
}
df_for_search$'target' <- target_lst
return(df_for_search)
}
new_df <- find_target(iris, 'Species', df_for_search, type='most_common')
find_target <- function(
data, column, df_for_search, type="mean"
) {
target_lst <- list()
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
if (type == "mean") {
if (!is.numeric(data[column] & is.integer(data[column]))) {
stop("Column must be numeric or integer for 'mean' type")
}
col_data <- mean(data[indexes,][[column]])
}
else if (type == "most_common") {
if (!is.factor(data[[column]]) & !is.character(data[[column]])) {
stop("Column must be factor or character for 'most_common' type")
}
vals <- data[indexes, ][[column]]
col_data <- names(which.max(table(vals)))
}
else {
stop("type must be 'mean' or 'most_common'")
}
target_lst <- append(target_lst, col_data)
}
df_for_search$'target' <- target_lst
return(df_for_search)
}
new_df <- find_target(iris, 'Species', df_for_search, type='most_common')
new_df <- find_target(iris, 'Species', df_for_search, type='mean')
find_target <- function(
data, column, df_for_search, type="mean"
) {
target_lst <- list()
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
if (type == "mean") {
if (!is.numeric(data[column] & !is.integer(data[column]))) {
stop("Column must be numeric or integer for 'mean' type")
}
col_data <- mean(data[indexes,][[column]])
}
else if (type == "most_common") {
if (!is.factor(data[[column]]) & !is.character(data[[column]])) {
stop("Column must be factor or character for 'most_common' type")
}
vals <- data[indexes, ][[column]]
col_data <- names(which.max(table(vals)))
}
else {
stop("type must be 'mean' or 'most_common'")
}
target_lst <- append(target_lst, col_data)
}
df_for_search$'target' <- target_lst
return(df_for_search)
}
new_df <- find_target(iris, 'Species', df_for_search, type='mean')
find_target <- function(
data, column, df_for_search, type="mean"
) {
target_lst <- list()
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
if (type == "mean") {
if (!is.numeric(data[[column]] & !is.integer(data[[column]]))) {
stop("Column must be numeric or integer for 'mean' type")
}
col_data <- mean(data[indexes,][[column]])
}
else if (type == "most_common") {
if (!is.factor(data[[column]]) & !is.character(data[[column]])) {
stop("Column must be factor or character for 'most_common' type")
}
vals <- data[indexes, ][[column]]
col_data <- names(which.max(table(vals)))
}
else {
stop("type must be 'mean' or 'most_common'")
}
target_lst <- append(target_lst, col_data)
}
df_for_search$'target' <- target_lst
return(df_for_search)
}
new_df <- find_target(iris, 'Species', df_for_search, type='mean')
find_target <- function(
data, column, df_for_search, type="mean"
) {
target_lst <- list()
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
if (type == "mean") {
if (!is.numeric(data[[column]] & !is.integer(data[[column]]))) {
stop("Column must be numeric or integer for 'mean' type")
}
col_data <- mean(data[indexes,][[column]])
}
else if (type == "most_common") {
if (!is.factor(data[[column]]) & !is.character(data[[column]])) {
stop("Column must be factor or character for 'most_common' type")
}
vals <- data[indexes, ][[column]]
col_data <- names(which.max(table(vals)))
}
else {
stop("type must be 'mean' or 'most_common'")
}
target_lst <- append(target_lst, col_data)
}
df_for_search$'target' <- target_lst
return(df_for_search)
}
new_df <- find_target(iris, 'Species', df_for_search, type='mean')
find_target <- function(
data, column, df_for_search, type="mean"
) {
target_lst <- list()
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
if (type == "mean") {
if (!is.numeric(data[[column]] || !is.integer(data[[column]]))) {
stop("Column must be numeric or integer for 'mean' type")
}
col_data <- mean(data[indexes,][[column]])
}
else if (type == "most_common") {
if (!is.factor(data[[column]]) || !is.character(data[[column]])) {
stop("Column must be factor or character for 'most_common' type")
}
vals <- data[indexes, ][[column]]
col_data <- names(which.max(table(vals)))
}
else {
stop("type must be 'mean' or 'most_common'")
}
target_lst <- append(target_lst, col_data)
}
df_for_search$'target' <- target_lst
return(df_for_search)
}
new_df <- find_target(iris, 'Species', df_for_search, type='mean')
find_target <- function(
data, column, df_for_search, type="mean"
) {
target_lst <- list()
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
if (type == "mean") {
if (!(is.numeric(data[[column]]) || !is.integer(data[[column]])))) {
find_target <- function(
data, column, df_for_search, type="mean"
) {
target_lst <- list()
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
if (type == "mean") {
if (!(is.numeric(data[[column]]) || !is.integer(data[[column]]))) {
stop("Column must be numeric or integer for 'mean' type")
}
col_data <- mean(data[indexes,][[column]])
}
else if (type == "most_common") {
if (!(is.factor(data[[column]]) || !is.character(data[[column]]))) {
stop("Column must be factor or character for 'most_common' type")
}
vals <- data[indexes, ][[column]]
col_data <- names(which.max(table(vals)))
}
else {
stop("type must be 'mean' or 'most_common'")
}
target_lst <- append(target_lst, col_data)
}
df_for_search$'target' <- target_lst
return(df_for_search)
}
new_df <- find_target(iris, 'Species', df_for_search, type='mean')
find_target <- function(
data, column, df_for_search, type="mean"
) {
target_lst <- list()
for (i in 1:rows) {
indexes <- df_for_search[i,]$original_indexes[[1]]
if (type == "mean") {
if (!(is.numeric(data[[column]]) & !is.integer(data[[column]]))) {
stop("Column must be numeric or integer for 'mean' type")
}
col_data <- mean(data[indexes,][[column]])
}
else if (type == "most_common") {
if (!(is.factor(data[[column]]) & !is.character(data[[column]]))) {
stop("Column must be factor or character for 'most_common' type")
}
vals <- data[indexes, ][[column]]
col_data <- names(which.max(table(vals)))
}
else {
stop("type must be 'mean' or 'most_common'")
}
target_lst <- append(target_lst, col_data)
}
df_for_search$'target' <- target_lst
return(df_for_search)
}
new_df <- find_target(iris, 'Species', df_for_search, type='mean')
new_df <- find_target(iris, 'Species', df_for_search, type='most_common')
Mapper$points_in_vertex
find_target <- function(
data, column, type="mean"
) {
rows <- length(Mapper$level_of_vertex)
df_for_search <- data.frame()
target_lst <- list()
for (i in 1:rows) {
# Get original index
original_row_lst <- Mapper$points_in_vertex[[i]]
df_for_search <- rbind(
df_for_search,
data.frame(
node = i,
original_indexes = I(list(original_row_lst))
)
)
indexes <- df_for_search[i,]$original_indexes[[1]]
if (type == "mean") {
if (!(is.numeric(data[[column]]) & !is.integer(data[[column]]))) {
stop("Column must be numeric or integer for 'mean' type")
}
col_data <- mean(data[indexes,][[column]])
}
else if (type == "most_common") {
if (!(is.factor(data[[column]]) & !is.character(data[[column]]))) {
stop("Column must be factor or character for 'most_common' type")
}
vals <- data[indexes, ][[column]]
col_data <- names(which.max(table(vals)))
}
else {
stop("type must be 'mean' or 'most_common'")
}
target_lst <- append(target_lst, col_data)
}
df_for_search$'target' <- target_lst
return(df_for_search)
}
new_df <- find_target(iris, 'Species', type='most_common')
source('R/FindTarget.R')
source('R/ColorEmbedding.R')
new_df <- ColorEmbedding(iris, 'Species', type='most_common')
source('R/MapperCorrelation.R')
